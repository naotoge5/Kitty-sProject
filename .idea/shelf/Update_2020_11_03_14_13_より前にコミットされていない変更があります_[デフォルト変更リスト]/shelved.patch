Index: assets/setupDB.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>drop database if exists kittydb;\n\ncreate database kittydb;\n\nuse kittydb;\n\n/*create user 'kitty' @'localhost' identified by 'pro02';*/\n/*↓を使う*/\ncreate user 'kitty'@'localhost' identified by 'pro02';\n\n/*mysqlデフォルト認証方式がcaching_sha2_password,PHPのMySQL接続方式が未対応のため*/\ngrant all on kittydb.* to 'kitty'@'localhost';\n\n/*権限の付与*/\n/*\n grant all on pp11db.* to 'kitty'@'localhost' identified with mysql_native_password by 'password';\n MySQL5.7以降出来なくなった。\n */\ncreate table companies (\n    id int auto_increment primary key,\n    name varchar (100) not null,\n    tel varchar (100) not null,\n    address varchar (100) not null,\n    mail varchar (100) not null,\n    password varchar (100) not null\n);\n\ncreate table objects (\n    id int auto_increment primary key,\n    name varchar (100) not null,\n    details text,\n    category varchar(100) not null,\n    datetime datetime not null,\n    company_id int not null\n);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- assets/setupDB.sql	(revision 289b7d25a2817a439e5d0d774d5f69a74522a798)
+++ assets/setupDB.sql	(date 1604380300138)
@@ -16,20 +16,37 @@
  grant all on pp11db.* to 'kitty'@'localhost' identified with mysql_native_password by 'password';
  MySQL5.7以降出来なくなった。
  */
-create table companies (
-    id int auto_increment primary key,
-    name varchar (100) not null,
-    tel varchar (100) not null,
-    address varchar (100) not null,
-    mail varchar (100) not null,
-    password varchar (100) not null
+create table companies
+(
+    id       int auto_increment primary key,
+    name     varchar(100) not null,
+    tel      varchar(100) not null,
+    address  varchar(100) not null,
+    mail     varchar(100) not null,
+    password varchar(100) not null
 );
 
-create table objects (
-    id int auto_increment primary key,
-    name varchar (100) not null,
-    details text,
-    category varchar(100) not null,
-    datetime datetime not null,
-    company_id int not null
-);
\ No newline at end of file
+create table objects
+(
+    id         int auto_increment primary key,
+    name       varchar(100) not null,
+    details    text,
+    category   varchar(100) not null,
+    datetime   datetime     not null,
+    company_id int          not null
+);
+insert into companies
+values (null, '株式会社KCG', 0120123456, '京都市南区西九条寺ノ前町10-5', '10naotoge5.ykputi@gmail.com',
+        '$2y$10$CstYoew/bQ0z7Yjb6T1wh.Z3wfynIEbQ5eySdwN8kyYaekPjfDSxC');
+insert into companies
+values (null, '株式会社KCGI', 0120789111, '京都市左京区田中門前町7', 'st071959@m03.kyoto-kcg.ac.jp',
+        '$2y$10$CScjAAj9Cg4DspqQ1MubOe3t6bmy53TaN1GsrWaSahde/a9c4HTEa');
+
+insert into objects
+values (null, 'レインコート', '駐車場', '雨具', '2020-11-20 13:00:00', 2);
+insert into objects
+values (null, '傘', '駐車場', '雨具', '2020-11-20 14:00:00', 2);
+insert into objects
+values (null, '財布', '駐車場', '貴重品', '2020-11-20 15:00:00', 2);
+insert into objects
+values (null, 'シャープペン', '駐車場', '筆記用具', '2020-11-21 16:00:00', 2);
Index: assets/functions.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\nsession_start();\n//定数\ndefine('DSN', 'mysql:host=localhost;dbname=kittydb');\ndefine('DB_USER', 'kitty');\ndefine('DB_PASS', 'pro02');\n//pdoの取得\nfunction getPDO()\n{\n    static $pdo;\n    try {\n        $option = array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION);\n        $pdo = new PDO(DSN, DB_USER, DB_PASS, $option);\n    } catch (PDOException $e) {\n        die($e->getMessage());\n    }\n    return $pdo;\n}\n\n//企業データの呼び出し\nfunction read_companyData($id)\n{\n    try {\n        $pdo = getPDO();\n        $stmt = $pdo->prepare(\"SELECT * FROM companies WHERE id=:id\");\n        if ($stmt->execute(array(\":id\" => $id))) {\n            return $stmt->fetchAll();\n        }\n        return false;\n    } catch (PDOException $e) {\n        die($e->getMessage());\n    }\n}\n\nfunction read_objectData($id)//落とし物データの呼び出し\n{\n    try {\n        $pdo = getPDO();\n        $stmt = $pdo->prepare(\"SELECT * FROM objects WHERE company_id=:company_id\");\n        if ($stmt->execute(array(\":company_id\" => $id))) {\n            return $stmt->fetchAll();\n        }\n        return false;\n    } catch (PDOException $e) {\n        die($e->getMessage());\n    }\n}\n\n/*--データの更新等--*/\n//未着手\nfunction delete_userID($id)\n{\n    try {\n        global $conn;\n        $statement = $conn->prepare(\"DELETE FROM users WHERE id=:id\");\n        $ret = $statement->execute(array(\":id\" => $id));\n        $count = ($ret) ? $statement->rowCount() : 0;\n\n        return $count;\n    } catch (PDOException $e) {\n        die($e->getMessage());\n    }\n}\n\n//\n// ユーザを1件更新\n// 成功すれば1を返す。失敗や変更がなければ0を返す。\nfunction update_userID($id, $userID, $password, $name)\n{\n    try {\n        global $conn;\n\n        $statement = $conn->prepare(\"UPDATE users \n\t\t\tSET userID=:userID , password=:password , name=:name WHERE id=:id\");\n        $ret = $statement->execute(\n            array(\":id\" => $id,\n                \":userID\" => $userID,\n                \":password\" => $password,\n                \":name\" => $name)\n        );\n        $count = ($ret) ? $statement->rowCount() : 0;\n\n        return $count;\n    } catch (PDOException $e) {\n        die($e->getMessage());\n    }\n}\n\n\n//\n// ユーザのキーワード検索\n// 成功すれば，検索結果の連想配列を返す。\nfunction search_userID($keyword)\n{\n    try {\n        global $conn;\n        $result = $conn->prepare(\n            \"SELECT * FROM users WHERE name LIKE :keyword \");\n        $result->execute(array(\":keyword\" => \"%{$keyword}%\"));\n\n        return $result;\n\n    } catch (PDOException $e) {\n        die($e->getMessage());\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- assets/functions.php	(revision 289b7d25a2817a439e5d0d774d5f69a74522a798)
+++ assets/functions.php	(date 1604379695635)
@@ -37,6 +37,8 @@
     try {
         $pdo = getPDO();
         $stmt = $pdo->prepare("SELECT * FROM objects WHERE company_id=:company_id");
+        $stmt->bindValue(':company_id', $id, PDO::PARAM_STR);
+        $stmt->execute();
         if ($stmt->execute(array(":company_id" => $id))) {
             return $stmt->fetchAll();
         }
@@ -51,7 +53,7 @@
 function delete_userID($id)
 {
     try {
-        global $conn;
+
         $statement = $conn->prepare("DELETE FROM users WHERE id=:id");
         $ret = $statement->execute(array(":id" => $id));
         $count = ($ret) ? $statement->rowCount() : 0;
Index: public/index.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n//データベースに接続\n$db_host = '127.0.0.1';  // サーバーのホスト名\n$db_name = 'kittydb';    // データベース名\n$db_user = 'kitty';      // データベースのユーザー名\n$db_pass = 'pro02';      // データベースのパスワード\ntry {\n    $dbh = new PDO('mysql:host=127.0.0.1;dbname=kittydb', $db_user, $db_pass);\n} catch (PDOException $e) {\n    exit('データベース接続失敗 ' . $e->getMessage());\n}\n\nif (isset($_POST[\"lookfor\"])) {//条件なしでの検索\n    $sql = 'SELECT * FROM objects';\n    $stmt = $dbh->query($sql);\n    $objects = $stmt->fetchAll(PDO::FETCH_ASSOC); // データベースに登録されている全ての注文内容を連想配列で取得}\n};\n//functionでやる\nif (isset($_POST[\"Serch\"])) {//名前で検索する\n    $name = $_POST['name'];\n    $sql = 'SELECT * FROM objects WHERE name = :name';\n    $serch = array(':name' => $name);\n    $stmt = $dbh->prepare($sql);\n    $stmt->execute($serch);\n    $objects = $stmt->fetchAll(PDO::FETCH_ASSOC);//fetch(PDO::FETCH_ASSOC)は連想配列で行を取り出す\n};\n\nif ((isset($_POST[\"category\"]))) {//カテゴリー検索\n    $category = $_POST['category'];\n    $sql = 'SELECT * FROM objects WHERE  category= :category';\n    $category = array(':category' => $category);\n    $stmt = $dbh->prepare($sql);\n    $stmt->execute($category);\n    $objects = $stmt->fetchAll(PDO::FETCH_ASSOC);//fetch(PDO::FETCH_ASSOC)は連想配列で行を取り出す\n\n}\n?>\n\n<!DOCTYPE html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>落とし物検索サービス（仮）</title>\n</head>\n<body>\n</body>\n<h1>落とし物検索サービス（仮）</h1>\n<form action=\"index.php\" method=\"POST\" id=\"form\">\n    <input type=\"submit\" name=\"lookfor\" value=\"条件をつけずに検索する\" class=\"button\"></br>\n    <input type=\"text\" placeholder=\"名前を入力してください\" name=\"name\">\n    <input type=\"submit\" name=\"Serch\" value=\"名前で検索する\" class=\"button\"></br>\n\n    <select name=\"category\" onchange=\"submit(this.form)\">\n        <option disabled selected value>未選択</option>\n        //未選択を選択したらすべて表示if文で条件をつけて表示する\n        <option value=\"雨具\">雨具</option>\n        　//dbからカテゴリーを引っ張ってきて表示する　　　\n        <option value=\"筆記用具\">筆記用具</option>\n    </select>\n    <input type=\"submit\" name=\"send\" value=\"カテゴリーで検索\" class=\"button\">\n</form>\n\n<?php if (isset($_POST[\"lookfor\"]) || isset($_POST[\"name\"]) || isset($_POST[\"category\"]))://検索または表示ボタンが押されたとき?>\n    <?php foreach ($objects as $object): ?>\n        <td>【名前】<?= htmlspecialchars($object['name'], ENT_QUOTES, 'UTF-8') ?></td>\n        <td>【詳細】<?= htmlspecialchars($object['details'], ENT_QUOTES, 'UTF-8') ?></td>\n        <td>【カテゴリー】<?= htmlspecialchars($object['category'], ENT_QUOTES, 'UTF-8') ?></td>\n        <td>【時間】<?= htmlspecialchars($object['datetime'], ENT_QUOTES, 'UTF-8') ?></td></br>\n    <?php endforeach; ?>\n<?php endif ?>\n　<a href=\"index.php\">検索条件をリセットする</a>\n</html>\n<script src=\"https://code.jquery.com/jquery-3.5.1.js\"></script>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- public/index.php	(revision 289b7d25a2817a439e5d0d774d5f69a74522a798)
+++ public/index.php	(date 1604379538666)
@@ -27,7 +27,7 @@
 
 if ((isset($_POST["category"]))) {//カテゴリー検索
     $category = $_POST['category'];
-    $sql = 'SELECT * FROM objects WHERE  category= :category';
+    $sql = 'SELECT * FROM objects WHERE category= :category';
     $category = array(':category' => $category);
     $stmt = $dbh->prepare($sql);
     $stmt->execute($category);
Index: company/authentication/login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <title>login</title>\n</head>\n<body>\n<header></header>\n<h1>ログインページ</h1>\n<h2>ログイン</h2>\n<form action=\"check.php\" method=\"post\">\n    <table>\n        <tr>\n            <th>メールアドレス</th>\n            <td><input type=\"email\" name=\"mail\" required></td>\n        </tr>\n        <tr>\n            <th>パスワード</th>\n            <td><input type=\"password\" name=\"password\" required></td>\n        </tr>\n    </table>\n    <input type=\"submit\">\n</form>\n<h2>新規登録</h2>\n<form action=\"create.php\" method=\"post\">\n    <table>\n        <tr>\n            <th>企業名</th>\n            <td><input type=\"text\" name=\"name\" required></td>\n        </tr>\n        <tr>\n            <th>電話番号</th>\n            <td><input type=\"tel\" name=\"tel\" required></td>\n        </tr>\n        <tr>\n            <th>住所</th>\n            <td><input type=\"text\" name=\"address\" required></td>\n        </tr>\n        <tr>\n            <th>メールアドレス</th>\n            <td><input type=\"email\" name=\"mail\" required></td>\n        </tr>\n        <tr>\n            <th>パスワード</th>\n            <td><input type=\"password\" name=\"password\" required></td>\n        </tr>\n    </table>\n    <input type=\"submit\">\n</form>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- company/authentication/login.html	(revision 289b7d25a2817a439e5d0d774d5f69a74522a798)
+++ company/authentication/login.html	(date 1604377043173)
@@ -45,6 +45,10 @@
             <th>パスワード</th>
             <td><input type="password" name="password" required></td>
         </tr>
+        <tr>
+            <th>パスワード</th>
+            <td><input name="date" type="date" /></td>
+        </tr>
     </table>
     <input type="submit">
 </form>
Index: .idea/php.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/php.xml	(date 1604373512042)
+++ .idea/php.xml	(date 1604373512042)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PhpProjectSharedConfiguration" php_language_level="7.4" />
+</project>
\ No newline at end of file
